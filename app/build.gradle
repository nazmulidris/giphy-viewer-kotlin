/*
 * Copyright 2020 Nazmul Idris. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
  compileSdkVersion 28
  defaultConfig {
    applicationId "com.r3bl.giphyviewer"
    minSdkVersion 26
    targetSdkVersion 28
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
          'proguard-rules.pro'
    }
  }
}

// Common deps.
dependencies {
  // Local deps.
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  // Kotlin.
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.1'
  // AppCompat.
  implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
  // Material Design Components.
  implementation 'com.google.android.material:material:1.1.0-alpha06'
  // RecyclerView.
  implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha05'
  // CardView.
  implementation 'androidx.cardview:cardview:1.0.0'
  // ConstraintLayout.
  implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta1'
  // Anko.
  implementation 'org.jetbrains.anko:anko:0.10.8'
  // Physics based animation.
  implementation 'androidx.dynamicanimation:dynamicanimation:1.1.0-alpha01'
  // Android KTX.
  implementation 'androidx.core:core-ktx:1.1.0-beta01'
  implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
  // SwipeRefreshLayout.
  implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-alpha01'
  // [Architecture Components](http://tinyurl.com/y7rad9t4).
  implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha01'
  implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0-alpha01'
  // Paginate / Infinite Scrolling..
  implementation 'com.github.markomilos:paginate:0.5.1'
  // Fresco.
  implementation 'com.facebook.fresco:fresco:1.11.0'
  implementation 'com.facebook.fresco:animated-gif:1.11.0'
}

// Android unit test.
dependencies {
  testImplementation 'junit:junit:4.13-beta-2'
  testImplementation 'org.assertj:assertj-core:3.11.1'
}

// Roboelectric (unit tests).
android {
  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }
}
dependencies {
  testImplementation 'androidx.test:core:1.1.0'
  testImplementation 'org.robolectric:robolectric:4.2'
}

// Android instrumented test.
dependencies {
  androidTestImplementation 'androidx.test.ext:junit:1.1.0'
  androidTestImplementation 'androidx.test:runner:1.1.1'
  androidTestImplementation 'androidx.test:rules:1.1.1'
  // AssertJ library
  androidTestImplementation 'org.assertj:assertj-core:3.11.1'
  // Optional -- UI testing with Espresso
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
  // Optional -- UI testing with UI Automator
  androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}

// MockK for unit and instrumented tests.
dependencies {
  testImplementation "io.mockk:mockk-android:1.9.3.kotlin12"
  androidTestImplementation "io.mockk:mockk-android:1.9.3.kotlin12"
}

// Giphy Android SDK.
dependencies {
  implementation('com.giphy.sdk:core:1.0.2@aar') {
    transitive = true
  }
}